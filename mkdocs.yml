# General
site_name: Shippable Docs
repo_url: https://github.com/Shippable/docs

# Paths
docs_dir: sources
theme_dir: theme/saas

#detect broken links and break the build
strict: true

#Google Analytics
google_analytics: ['UA-50610279-1', 'auto']

# Pages
pages:
  - Getting started:
    - Overview:
      - What is Shippable?: index.md
      - Use cases: getting-started/shippable-use-cases.md
      - Pipeline basics: getting-started/pipeline-basics.md
      - Single Pane of Glass: getting-started/single-pane-of-glass-spog.md
      - Custom Views: getting-started/custom-views.md
      - Concepts: getting-started/concepts.md
    - What is supported?:
      - Source control providers: getting-started/supported-scms.md
      - Languages: getting-started/supported-languages.md
      - Services: getting-started/supported-services.md
      - Notifications: getting-started/supported-notifications.md
      - Artifact repositories: getting-started/supported-artifact-repositories.md
      - Deployment endpoints: getting-started/supported-deployments.md
    - Plans and Billing:
      - Pricing plans: getting-started/billing-overview.md
      - Managing your plan: getting-started/manage-plan.md
    - Your account:
      - Setting account email: getting-started/set-email.md
      - Managing payment methods: getting-started/manage-payment-methods.md
      - Git identities: getting-started/git-identities.md
      - API tokens: getting-started/api-tokens.md
      - Integrations: getting-started/integrations.md
    - Using your own infrastructure:
      - Overview: getting-started/byon-overview.md
      - Managing nodes: getting-started/byon-manage-node.md
    - Run our samples:
      - Run your first build: getting-started/ci-sample.md
      - Deploy your first app: getting-started/cd-sample.md
    - Support: support.md
  - CI:
    - Overview:
      - Why CI?: ./ci/why-continuous-integration.md
      - Enabling a project: ci/enable-project.md
      - Yml structure:  ci/yml-structure.md
      - Triggering your CI job: ci/trigger-job.md
      - Triggering other jobs after CI: ci/trigger-pipeline-jobs.md
      - Permissions: ci/permissions.md
      - Troubleshooting: ci/troubleshooting.md
    - Preparing your environment:
      - Setting language and runtime: ci/set-language.md
      - Choosing a build image: ci/build-image.md
      - Specifying branches to build: ci/specify-branches.md
      - Working with env variables: ci/env-vars.md
    - Working with services:
      - Overview: ci/services-overview.md
      - CouchDB:  ci/couchdb.md
      - Elasticsearch:  ci/elasticsearch.md
      - Memcached:  ci/memcached.md
      - MongoDB:  ci/mongodb.md
      - MySQL:  ci/mysql.md
      - Neo4j:  ci/neo4j.md
      - PostgreSQL: ci/postgresql.md
      - RabbitMQ: ci/rabbitmq.md
      - Redis:  ci/redis.md
      - Riak: ci/riak.md
      - RethinkDB:  ci/rethinkdb.md
      - Selenium: ci/selenium.md
      - SQLite: ci/sqlite.md
    - Building and testing your project:
      - Configuring your CI: ci/build-and-test.md
      - Running tests in parallel:  ci/parallelize-tests.md
      - Status code: ci/build_status.md
    - Configuring test/code coverage:
      - Basic config: ci/test-code-coverage-reports.md
      - JaCoCo reports: ci/jacoco-reports.md
    - Sending notifications:
      - Overview: ci/send-notifications.md
      - Sending messages to Slack:  ci/slack-notifications.md
      - Sending messages to Email:  ci/email-notifications.md
      - Sending messages to Hipchat:  ci/hipchat-notifications.md
      - Sending messages to IRC:  ci/irc-notifications.md
    - Pushing artifacts:
      - Overview: ci/push-artifacts.md
      - Push artifacts to S3: ci/push-to-s3.md
      - Push to JFrog Artifactory: ci/push-to-artifactory.md
      - Push Docker image to Docker Hub:  ci/push-docker-hub.md
      - Push Docker image to Amazon ECR:  ci/push-amazon-ecr.md
      - Push Docker image to GCR: ci/push-gcr.md
      - Push Docker image to Quay:  ci/push-quay.md
      - Push Docker image to Docker Private/Trusted registry: ci/push-docker-private-registry.md
    - Deployments:
      - Overview: ci/deployment-overview.md
      - Heroku: ci/deploy-to-heroku.md
      - Amazon EC2: ci/deploy-to-ec2.md
      - AWS Opsworks: ci/deploy-to-aws-opsworks.md
      - AWS EBS:  ci/deploy-to-aws-beanstalk.md
      - Digital Ocean: ci/deploy-to-digital-ocean.md
    - Advanced config:
      - Caching: ci/caching.md
      - Using a custom Docker image: ci/custom-docker-image.md
      - Using Docker Compose: ci/docker-compose.md
      - Triggering parallel jobs: ci/matrix-builds.md
      - Building pull requests: ci/pull-request-builds.md
      - Skipping a build: ci/skip-builds.md
      - Using git submodules: ci/git-submodules.md
      - Retrying a command: ci/retry-command.md
      - Using SSH keys: ci/ssh-keys.md
      - Canceling builds: ci/cancel-builds.md
      - Customizing timeouts: ci/custom-timeouts.md
      - Console logs: ci/console-logs.md
      - Build badges: ci/build-badges.md
      - Scheduled builds: ci/scheduled-builds.md
    - Language guide:
      - Overview: ci/supported-languages.md
      - Node.js: ci/nodejs-continuous-integration.md
      - Python: ci/python-continuous-integration.md
      - Java: ci/java-continuous-integration.md
      - Ruby: ci/ruby-continuous-integration.md
      - Go: ci/go-continuous-integration.md
      - Scala: ci/scala-continuous-integration.md
      - PHP: ci/php-continuous-integration.md
      - Clojure: ci/clojure-continuous-integration.md
      - C/C++: ci/cpp-continuous-integration.md
      - Unsupported languages: ci/unsupported-languages.md
    - Debugging:
      - SSH Access to Build Machine: ci/ssh-access.md
  - Validate:
    - Before you start:
      - What is Validate?: validate/devops-validate.md
      - Configuration: validate/configuration.md
      - Single pane of glass: validate/single-pane-of-glass-spog.md
      - Triggering jobs: validate/trigger-job.md
      - Sending notifications: validate/send-notifications.md
    - Running performance tests:
      - Nouvola: validate/nouvola.md
    - Running integration tests:
      - Sauce Labs: validate/sauce-labs.md
  - Release:
    - Before you start:
      - What is release management?: release/devops-release-management.md
      - Configuration: release/configuration.md
      - Single pane of glass: release/single-pane-of-glass-spog.md
      - Triggering release jobs: release/trigger-job.md
      - Sending notifications: release/send-notifications.md
    - Creating a release:
      - From Single Service/Component: release/single-component.md
      - From Multiple Services/Components: release/mutiple-components.md
      - From upstream releases: release/upstream-releases.md
    - Managing release versions:
      - Setting version number: release/set-version-number.md
      - Incrementing version numbers: release/increment-version-number.md
  - Deploy:
    - Before you start:
      - Why deploy?:  deploy/why-deploy.md
      - Configuration: deploy/configuration.md
      - Single pane of glass: deploy/single-pane-of-glass-spog.md
      - Triggering deploy jobs: deploy/trigger-job.md
      - Sending notifications: deploy/send-notifications.md
      - Tracing resources: deploy/trace-pipeline.md
    - How To:
      - Configure environment variables during deployment?:  deploy/howto-configure-deploy-envs.md
      - Configure replicas during deployment?:  deploy/howto-configure-deploy-replicas.md
    - Amazon ECS:
      - Basic managed deployment: deploy/amazon-ecs.md
      - Specifying deployment strategy: deploy/amazon-ecs-strategy.md
      - Using an ELB/ALB: deploy/amazon-ecs-elb-alb.md
      - Multi-container services: deploy/amazon-ecs-multiple-containers.md
      - Multiple environments: deploy/amazon-ecs-multiple-environments.md
      - Custom deployments(runCLI.md: deploy/amazon-ecs-unmanaged.md
      - Naming conventions: deploy/amazon-ecs-naming-conventions.md
    - Kubernetes:
      - Default scenario: deploy/kubernetes.md
      - Specifying deployment strategy: deploy/kubernetes-strategy.md
      - Deploying multi-container services: deploy/kubernetes-multiple-containers.md
      - Deploying to multiple environments: deploy/kubernetes-multiple-environments.md
      - Naming conventions: deploy/kubernetes-naming-conventions.md
    - GKE:
      - Basic scenario: deploy/gke.md
      - Specifying deployment strategy: deploy/gke-strategy.md
      - Using a load balancer:  deploy/gke-loadbalancer.md
      - Deploying multi-container services: deploy/gke-multiple-containers.md
      - Deploying to multiple environments: deploy/gke-multiple-environments.md
      - Working with state and environment variables: deploy/gke-state-env-vars.md
      - Using custom pod templates: deploy/gke-custom-pods.md
    - Docker Datacenter:
      - Basic scenario: deploy/docker-datacenter.md
    - Docker Cloud:
      - Basic scenario: deploy/docker-cloud.md
    - Azure DC/OS:
      - Basic scenario: deploy/azure-dcos.md
    - AWS Elastic Beanstalk:
      - Deploying single-container environments:  deploy/aws-elastic-beanstalk.md
      - Deploying multi-container environments: deploy/aws-elastic-beanstalk-multiple-containers.md
      - Deploying to multiple environments: deploy/aws-elastic-beanstalk-multiple-environments.md
      - Working with state and environment variables: deploy/aws-elastic-beanstalk-state-env-vars.md
    - Node Cluster on any cloud:
      - Deploying artifacts: deploy/vm-basic.md
      - Deploying from JFrog Artifactory: deploy/vm-jfrog.md
      - Deploying to multiple environments: deploy/vm-multiple-environments.md
      - Working with state and environment variables: deploy/vm-state-env-vars.md
    - Rolling back deployments: deploy/rollback.md
  - Provision:
    - Before you start:
      - What is provisioning: provision/why-infrastructure-provisioning.md
      - Configuration: provision/configuration.md
      - Single pane of glass: provision/single-pane-of-glass-spog.md
      - Triggering jobs: provision/trigger-job.md
      - Sending notifications: provision/send-notifications.md
    - Provisioning with Terraform:
      - AWS infrastructure: provision/aws-with-terraform.md
    - Provisioning with Ansible:
      - AWS infrastructure: provision/aws-with-ansible.md
      - Digital Ocean infrastructure: provision/digital-ocean-with-ansible.md
      - Google Cloud infrastructure: provision/google-cloud-with-ansible.md
      - Microsoft Azure infrastructure: provision/microsoft-azure-with-ansible.md
  - Visibility:
    - Overview: visibility/visibility-overview.md
  - Operations:
    - Overview: operations/operations-overview.md
  - Platform:
    - Overview: platform/platform-overview.md
    - Job Runtime:
      - Overview: platform/job-runtime-overview.md
      - Operating System:
        - Overview: platform/job-runtime-os.md
        - Ubuntu 14:04: platform/job-runtime-ubuntu14.md
        - Ubuntu 16:04: platform/job-runtime-ubuntu16.md
      - Languages:
        - Nodejs: platform/language-nodejs.md
        - Python: platform/language-python.md
        - Java: platform/language-java.md
        - Ruby: platform/language-ruby.md
        - GO: platform/language-go.md
        - PHP: platform/language-php.md
        - Clojure: platform/language-clojure.md
        - Scala: platform/language-scala.md
        - C/C++: platform/language-cplusplus.md
      - CLIs:
        - AWS: platform/cli-aws.md
        - AWSEB: platform/cli-awseb.md
        - GKE: platform/cli-gke.md
        - Terraform: platform/cli-terraform.md
        - Ansible: platform/cli-ansible.md
        - JFrog: platform/cli-jfrog.md
        - Azure: platform/cli-azure.md
        - Packer: platform/cli-packer.md
        - Docker: platform/cli-docker.md
      - Services:
        - Cassandra: platform/service-cassandra.md
        - Couchdb: platform/service-couchdb.md
        - Elasticsearch: platform/service-elasticsearch.md
        - Neo4j: platform/service-neo4j.md
        - Memcached: platform/service-memcached.md
        - Mongodb: platform/service-mongodb.md
        - Mysql: platform/service-mysql.md
        - Postgres: platform/service-postgres.md
        - Rabbitmq: platform/service-rabbitmq.md
        - Redis: platform/service-redis.md
        - Rethinkdb: platform/service-rethinkdb.md
        - Riak: platform/service-riak.md
        - Selenium: platform/service-selenium.md
        - Sqllite: platform/service-sqllite.md
      - Nodes:
        - Overview: platform/job-runtime-nodes.md
        - Dynamic Nodes: platform/job-runtime-dynamic-nodes.md
        - Custom Nodes: platform/job-runtime-custom-nodes.md
      - Environment Variables:
        - Overview: platform/job-runtime-environment-variables.md
      - Caching:
        - Overview: platform/job-runtime-caching.md
    - Workflow:
      - What is it: platform/workflow-overview.md
      - Resources:
        - Overview: platform/resources-overview.md
        - ciRepo: platform/resource-cirepo.md
        - cliConfig: platform/resource-cliconfig.md
        - cluster: platform/resource-cluster.md
        - dockerOptions: platform/resource-dockeroptions.md
        - file: platform/resource-file.md
        - gitRepo: platform/resource-gitrepo.md
        - image: platform/resource-image.md
        - integration: platform/resource-integration.md
        - loadBalancer: platform/resource-loadbalancer.md
        - notification: platform/resource-notification.md
        - params: platform/resource-params.md
        - replicas: platform/resource-replicas.md
        - state: platform/resource-state.md
        - syncRepo: platform/resource-syncrepo.md
        - time: platform/resource-time.md
        - version: platform/resource-version.md
      - Jobs:
        - Overview: platform/jobs-overview.md
        - deploy: platform/jobs-deploy.md
        - manifest: platform/jobs-manifest.md
        - provision: platform/jobs-provision.md
        - release: platform/jobs-release.md
        - runCI: platform/jobs-runci.md
        - runCLI: platform/job-runcli.md
        - runSH: platform/jobs-runsh.md
        - jenkinsJob: platform/job-jenkinsjob.md
        - rSync: platform/jobs-rSync.md
      - State:
        - Overview: platform/state-overview.md
      - Triggers:
        - Overview: platform/triggers-overview.md
    - Visibility:
      - Overview: visibility/visibility-overview.md
    - Operations:
      - Overview: operations/operations-overview.md
    - Integrations:
      - Overview: platform/integrations-overview.md
      - Amazon ECR: platform/int-amazon-ecr.md
      - Amazon ECS: platform/int-amazon-ecs.md
      - Azure DC/OS: platform/int-azure-dcos.md
      - Bitbucket: platform/int-bitbucket.md
      - Docker Cloud: platform/int-docker-cloud.md
      - Docker Datacenter: platform/int-docker-datacenter.md
      - Docker Hub: platform/int-docker-hub.md
      - Docker Trusted Registry: platform/int-docker-trusted-registry.md
      - Event Trigger: platform/int-event-trigger.md
      - Git Credential: platform/int-git-credential.md
      - GitHub: platform/int-github.md
      - GitHub Enterprise: platform/int-github-enterprise.md
      - Gitlab: platform/int-gitlab.md
      - Google Container Engine: platform/int-gke.md
      - Google Container Registry: platform/int-gcr.md
      - Hipchat: platform/int-hipchat.md
      - Jenkins: platform/int-jenkins.md
      - JFrog Artifactory: platform/int-jfrog-artifactory.md
      - Joyent Triton: platform/int-tripub.md
      - Key-value: platform/int-key-value.md
      - Kubernetes: platform/int-kubernetes.md
      - Node Cluster: platform/int-node-cluster.md
      - PEM Keys: platform/int-key-pem.md
      - Private Registries: platform/int-private-registries.md
      - Quay.io: platform/int-quay.md
      - Slack: platform/int-slack.md
      - SSH Keys: platform/int-key-ssh.md
    - Tutorials:
      - Resources:
        - Working with Resources: platform/resources-working-with.md
      - Jobs:
        - Working with Jobs: platform/jobs-working-with.md
        - How to share data between Jobs: platform/howto-share-data-between-jobs.md
        - Unmanaged jobs: platform/jobs-unmanaged.md
      - API:
        - Overview: platform/api-overview.md
        - Tokens: platform/api-tokens.md
      - Shippable Server:
        - Installer: platform/admiral.md
        - Installing SE from AWS Marketplace: platform/admiral-aws-marketplace.md
        - Installing SE on a single machine: platform/admiral-onebox.md
        - Installing EE on two machines: platform/admiral-two-server.md
        - Installing EE on three machines: platform/admiral-three-server.md
        - Installing EE on three machines with an existing DB: platform/admiral-three-server-existing-db.md
        - Database Configuration: platform/admiral-db.md
        - State Storage Configuration: platform/admiral-gitlab.md
        - Message Configuration: platform/admiral-rabbitmq.md
        - Redis Configuration: platform/admiral-redis.md
        - Swarm Worker Configuration: platform/admiral-swarm-workers.md
        - Vault Configuration: platform/admiral-vault.md
        - Bitbucket Server Configuration: platform/admiral-bbs.md
      - AMIs:
        - v5.7.3: platform/machine-image-v573.md
        - v5.6.1: platform/machine-image-v561.md
        - v5.5.1: platform/machine-image-v551.md
        - v5.4.1: platform/machine-image-v541.md
        - v5.3.2: platform/machine-image-v532.md
      - Glossary:
        - Complete list of terms: platform/glossary.md
